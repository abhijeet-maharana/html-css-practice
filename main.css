* {
  /* override box-sizing here because we need to override inheriance and browser default box-sizing in all the elements */
  /* default total width= width+padding+border (means more width, you need to adjust width)*/
  /* box-sizing: content-box; */
  /* total width=width (content+border+padding)*/
  box-sizing: border-box;
}

/* use body to define font-family due to it has more specifity than universal selector
because of inheritance it will get applied to its direct or indirect childs */
/* inheritance has very low specificity even low from browser default styles */
body {
  font-family: "Montserrat", sans-serif;
  /* body default margin remove */
  margin: 0;
}

/* id selector */
#product-overview {
  /* backgrond, padding, border, margin are short hands,, check in chrome inspector what is the longer version of this */
  background: url("freedom.jpg");
  /* block level elements width by default 100%, we can chnage to 50% or px */
  width: 100%;
  /* need to use explicit height, if use 100%, it will take 100% of it parent, so we need to add height explicit height to parent also */
  height: 528px;
  padding: 10px;
  /* border: 5px solid black; */
  /* margin: 10px; */
}

.main-header {
  width: 100%;
  background: #2ddf5c;
  /* top bottom, left right */
  padding: 8px 16px;
}

.main-header > div {
  display: inline-block;
  vertical-align: middle;
}

.main-header__brand {
  color: #0e4f1f;
  text-decoration: none;
  font-weight: bold;
  font-size: 22px;
}

.main-nav {
  display: inline-block;
  text-align: right;
  /* hacky */
  width: calc(100% - 54px);
  /* vertical align */
  vertical-align: middle;
}

.main-nav__items {
  margin: 0;
  padding: 0;
  /* remove bullet points */
  list-style: none;
}

.main-nav__item {
  display: inline-block;
  margin: 0 16px;
}

.main-nav__item a {
  /* remove underline */
  text-decoration: none;
  color: #0e4f1f;
  /* font weight */
  font-weight: bold;
  padding: 3px 0;
}

/* pseudo class is with single colon which handles the states of an element*/
/* pseudo elements is with double colon like ::after,::before,::first-letter */
/* grouping */
.main-nav__item a:hover,
.main-nav__item a:active {
  color: white;
  /* border */
  border-bottom: 5px solid white;
  border-bottom: 5px solid white;
}

.main-nav__item--cta a {
  color: white;
  background: #ff1b68;
  padding: 8px 16px;
  border-radius: 8px;
}

.main-nav__item--cta a:hover,
.main-nav__item--cta a:active {
  color: #ff1b68;
  background: white;
  border: none;
}
/* anchor tag display is by default inline, so we can't apply margin padding top bottom to that element 
if we do display:block, we will take full width, like block level elements
if we do display:inline-block, then we will take width like inline but we can also apply margin padding top bottom
*/

/* if you have 2 block level elements together then margin collaps */

/* class selector */
.section-title {
  color: #2ddf5c;
  /* inherit will use its direct to indirect parent font-family */
  /* font-family: inherit; */
}
/* it is a decendant combinator selector as it combines
it has more specifity than only h1 */
#product-overview h1 {
  color: white;
  font-family: "Anton", sans-serif;
}

/* element selector */
/* h1 { */
/* color: white; */
/* default */
/* font-family: serif; */
/* font-family: sans-serif; */
/* font-family: "Anton", sans-serif; */
/* } */

/* Universal Selector */
/* * {
  color: red;
} */

/* attribute selector */
/* [disabled] {
  color: red;
} */

/* Specificity from high to low */
/* you can check from inspect element css applied */
/* Inline styles
#ID selectors
.class, :pseduo-class and attribute selectors
<tag> and ::pseduo-element selectors */

/* .highlighted-code {
  color: green;
}

#assignment-instructions {
  font-family: sans-serif;
  color: blue;
}

code {
  font-family: monospace;
  color: red;
} */

/* selectos with combinators */

/* Adjancent sibling */
/* second element immediaty coming after first element and they share the same parent */
/* li + li {
  background: black;
  color: white;
}

ol li {
  background: black;
  color: white;
} */

/* General Sibling */
/* Second element coming after first element(immedialy or not immediately) and they share the same parent */
/* h2 > P {
  color: red;
} */

/* Child */
/* Second element is direct child of first element */
/* div > p {
  color: red;
} */

/* Decendant */
/* Second element is direct or indirect child of first element */
/* div p {
  color: red;
} */

/* Don't learn this by heart */
/* https://developer.mozilla.org/en-US/docs/Web/CSS/Reference */

/* properties worth to remember
color
background color 
display
padding
margin
border
width
height
*/

/*
display: none vs visibility: hidden
We had a look at display: none;  - this value removes the element to which you apply it from the document flow. This means that the element is not visible and it also doesn't "block its position". Other elements can (and will) take its place instead.

There is an alternative to that though.

If you only want to hide an element but you want to keep its place (i.e. other elements don't fill the empty spot), you can use visibility: hidden; 
*/

/* .box {
    padding: 10px;
    border: 3px solid red;
    margin: 20px;
} */

.box {
  padding-top: 5px;
  padding-right: 10px;
  padding-bottom: 15px;
  padding-left: 20px;

  padding: 5px 10px 15px 20px;

  border-top: 3px solid red;
  border-right: 3px solid red;
  border-bottom: 3px solid red;
  border-left: 3px solid red;
  border-top-style: solid;
  border-top-width: 3px;
  border-top-color: red;

  border-style: solid;
  border-width: 3px;
  border-color: red;

  margin-top: 10px;
  margin-right: 20px;
  margin-bottom: 30px;
  margin-left: 40px;

  margin: 10px 20px 30px 40px;

  box-sizing: border-box;
  height: 300px;
  width: 48%;
  display: inline-block;
  margin: 0;
}

html,
body {
  height: 100%;
}

/* #first-box {
    height: 100%;
    box-sizing: border-box;
    height: 300px;
    width: 50%;
} */

#first-box {
  display: none;
  /* visibility: hidden; */
}

div:last-of-type:hover {
  border-color: green;
}
